{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/course/course.component.css","webpack:///./src/app/course/course.component.html","webpack:///./src/app/course/course.component.ts","webpack:///./src/app/course/course.service.ts","webpack:///./src/app/student/student.component.css","webpack:///./src/app/student/student.component.html","webpack:///./src/app/student/student.component.ts","webpack:///./src/app/student/student.service.ts","webpack:///./src/app/subject/subject.component.css","webpack:///./src/app/subject/subject.component.html","webpack:///./src/app/subject/subject.component.ts","webpack:///./src/app/subject/subject.service.ts","webpack:///./src/app/teacher/teacher.component.css","webpack:///./src/app/teacher/teacher.component.html","webpack:///./src/app/teacher/teacher.component.ts","webpack:///./src/app/teacher/teacher.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!-- <nav>\\n    <a routerLink=\\\"/course\\\" routerLinkActive=\\\"active\\\">Courses</a>\\n    <a routerLink=\\\"/student\\\" routerLinkActive=\\\"active\\\">Students</a>\\n    <a routerLink=\\\"/teacher\\\" routerLinkActive=\\\"active\\\">Teachers</a>\\n    <a routerLink=\\\"/subject\\\" routerLinkActive=\\\"active\\\">Subjects</a>\\n    </nav> -->\\n    \\n        <nav class=\\\"navbar navbar-light bg-dark\\\">\\n            <a routerLink=\\\"/course\\\" routerLinkActive=\\\"active\\\">Courses</a>\\n        <a routerLink=\\\"/student\\\" routerLinkActive=\\\"active\\\">Students</a>\\n        <a routerLink=\\\"/teacher\\\" routerLinkActive=\\\"active\\\">Teachers</a>\\n        <a routerLink=\\\"/subject\\\" routerLinkActive=\\\"active\\\">Subjects</a>\\n          </nav>\\n        <router-outlet> </router-outlet>\\n    \\n    \\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport{FormsModule} from '@angular/forms';\nimport { Routes,RouterModule } from '@angular/router';\nimport {HttpClientModule}  from '@angular/common/http'\n//import { AppRoutingModule }  from './app-routing.module';\n\n\nimport { AppComponent } from './app.component';\nimport { TeacherComponent } from './teacher/teacher.component';\nimport { SubjectComponent } from './subject/subject.component';\nimport { CourseComponent } from './course/course.component';\nimport { StudentComponent } from './student/student.component';\nimport { TeacherService } from './teacher/teacher.service';\nimport { SubjectService } from './subject/subject.service';\nimport { StudentService } from './student/student.service';\nimport { CourseService } from './course/course.service';\n//import { TeacherfromComponent } from './teacher/teacherfrom/teacherfrom.component';\n\nconst appRoutes:Routes=[{  path:'course', component:CourseComponent},\n{path:'teacher',component:TeacherComponent},\n{path:'subject',component:SubjectComponent},\n{path:'student',component:StudentComponent}\n]\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TeacherComponent,\n    SubjectComponent,\n    CourseComponent,\n    StudentComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(\n      appRoutes,{enableTracing: true}\n    )\n  ],\n  providers: [TeacherService,SubjectService,StudentService,CourseService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n  <title>Course List</title>\\n</head>\\n<body>\\n    <div class=\\\"container\\\">\\n        <br/>\\n        <br/>\\n        \\n        <div *ngIf=\\\"!form\\\">\\n          \\n            <ul id=\\\"grouplist\\\" class=\\\"list-group\\\" >\\n                <li class=\\\"list-group-item active\\\">Courses!</li>\\n                <li class=\\\"list-group-item\\\" *ngFor=\\\"let i of courseList;let y=index\\\" (click)=\\\"viewBatches(i.id)\\\" [ngClass]=\\\"{'active': selectedIndex == y, 'list-group-item': true}\\\"  >{{i.name}}</li>\\n            </ul>\\n            <br/>\\n          <br/>\\n            <button class='button' (click)=\\\"viewForm()\\\">Add Course</button>\\n\\n            <div *ngIf='show'>\\n                <ul >\\n                    <br/>\\n                    <br/>\\n                        <li class=\\\"list-group-item active\\\">Batches!</li>\\n                        <li class=\\\"list-group-item\\\" *ngFor=\\\"let i of batchList;let y=index\\\" > \\n                            {{i.name}}\\n                            <button (click)='getCourseLectures(i.id)'>Lectures</button>\\n                            <button (click)='getCourseStudents(i.id)'>Students</button>\\n                        </li>\\n                  </ul>\\n                  <div>\\n                      <ul>\\n                          <li>lectures!</li>\\n                          <li *ngFor=\\\"let i of lectureList;let y=index\\\">{{i.name}}</li>\\n                      </ul>\\n                      <label for=\\\"Lecture Name\\\">Name</label>\\n                      <input type=\\\"text\\\" #lecturename  required>\\n                      <button (click)='postLecture(lecturename.value)'>Add Lecture</button>\\n                  </div>\\n\\n                  <div>\\n                        <ul>\\n                            <li>students!</li>\\n                            <li *ngFor=\\\"let i of studentList;let y=index\\\">{{i.name}}</li>\\n                        </ul>\\n                    </div>\\n\\n                    <div>\\n\\n                    </div>\\n\\n\\n                  <br/>\\n                  <br/>\\n                  <div>\\n                      <label for=\\\"Batch Name\\\">Name</label>\\n                      <input type=\\\"text\\\" #batchname  required>\\n                      <button (click)='postCourseBatches(batchname.value)'>Add Batch</button>\\n                      \\n                  </div>\\n\\n\\n            </div>\\n            \\n      \\n        </div>\\n        <div *ngIf='form'>\\n            \\n                <label for=\\\"name\\\">Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"name\\\"  required>\\n          \\n          <button (click)='send()'>Add!</button>   \\n        </div>\\n  \\n    </div>\\n    \\n      \\n  </body>\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { CourseService } from './course.service';\nimport { CourseInterface } from './courseconfig';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent implements OnInit {\n\n  courseList: CourseInterface[]\n  batchList: object[]\n  lectureList:object[]\n  studentList:object[]\n  form: boolean\n  name: string\n  show: boolean\n  courseId\n  batchId\n\n  //subjectList:SubjectInterface[]\n\n  constructor(private course: CourseService) {\n    this.courseList = []\n    this.batchList = []\n    this.lectureList=[]\n    this.studentList=[]\n    //this.subjectList=[]\n  }\n\n  ngOnInit() {\n    this.course.getData().subscribe((event: any) => {\n      this.courseList = event;\n      console.log(this.courseList);\n    })\n  }\n\n  viewForm() {\n    this.form = true\n  }\n\n  viewBatches(id:number){\n    this.courseId=id\n    this.getCourseBatches() \n  }\n\n  send() {\n    // console.log(this.name)\n    // console.log(this.subjectId)\n    var newCourse: CourseInterface = {\n      name: this.name,\n      //courseId:this.courseId\n    };\n    this.course.postData(newCourse).subscribe((event: any) => {\n      this.courseList = event\n      console.log(this.courseList)\n    })\n  }\n\n  getCourseBatches() {\n    this.show = true\n    \n    this.course.getBatches(this.courseId).subscribe((event: any) => {\n      this.batchList = event;\n      console.log(this.batchList);\n    })\n  }\n\n  postCourseBatches(name: string) {\n    var  batch: Object = {\n      name: name\n    }\n    this.course.addBatch(this.courseId, batch).subscribe((event: any) => {\n      this.batchList = event\n      console.log(this.batchList)\n    })\n  }\n\n  getCourseLectures(id)\n  {\n    this.batchId=id\n    this.course.getLectures(this.courseId,this.batchId).subscribe((event:any)=>{\n      this.lectureList=event\n      console.log(this.lectureList)\n    })\n\n  }\n\n  getCourseStudents(id)\n  {\n    this.batchId=id\n    this.course.getStudents(this.courseId,this.batchId).subscribe((event:any)=>{\n      this.studentList=event\n      console.log(this.studentList)\n    })\n\n  }\n\n  postLecture(lecturename:string)\n  {\n    var datao={\n      name:lecturename\n    }\n    this.course.addLecture(this.courseId,this.batchId,datao).subscribe((event:any)=>{\n      console.log('added')\n    })\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CourseInterface } from './courseconfig';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n\n  \n  BASE_URL='http://localhost:3090/api/courses'\n\n  constructor(private http: HttpClient) { }\n  getData()\n  {\n    return this.http.get<CourseInterface>(this.BASE_URL);\n  }\n\n  postData(value:object)\n  {\n    return this.http.post<CourseInterface>(this.BASE_URL,value);\n  }\n\n  getBatches(courseId:number)\n  {\n    return this.http.get(this.BASE_URL+'/'+courseId+'/batches');\n  }\n\n  addBatch(courseId,batch:object){\n    return this.http.post(this.BASE_URL+'/'+courseId+'/batches',batch)\n    \n    }\n    \n    getLectures(courseId:number,batchId:number)\n    {\n      return this.http.get(this.BASE_URL+'/'+courseId+'/batches/'+batchId+'/lectures')\n\n    }\n\n    getStudents(courseId:number,batchId:number)\n    {\n      return this.http.get(this.BASE_URL+'/'+courseId+'/batches/'+batchId+'/students')\n\n    }\n    addLecture(courseId,batchId,lecturename:object)\n    {\n      return this.http.post(this.BASE_URL+'/'+courseId+'/batches/'+batchId+'/lectures',lecturename)\n    }\n}\n","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n  <title>Document</title>\\n</head>\\n<body>\\n    <div class=\\\"container\\\">\\n      <br/>\\n      <br/>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-6\\\">\\n              <div class=\\\"input-group\\\">\\n                <span class=\\\"input-group-btn\\\">\\n                  <button class=\\\"btn btn-secondary\\\" (click)='searchStudentById()' type=\\\"button\\\">Go!</button>\\n                </span>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"SearchbyIdname\\\"  required placeholder=\\\"Enter student id...\\\">\\n              </div>\\n\\n              <select [(ngModel)]='batchId' *ngIf='viewDropdown'>\\n                  <option *ngFor=\\\"let i of batchList;let y=index\\\" [ngValue]='i.id' >{{i.name}} </option>\\n              </select>\\n              <button class=\\\"btn btn-secondary\\\" (click)='EnrollBatch()' type=\\\"button\\\">Enroll!</button>\\n\\n            </div>\\n          </div>\\n\\n      <div>\\n        {{particularStudent.name}}\\n      </div>\\n       \\n        <div *ngIf=\\\"!form\\\">\\n          <br>\\n          <br>\\n            <ul class=\\\"list-group\\\" >\\n                <li class=\\\"list-group-item active\\\">Students!</li>\\n                <li class=\\\"list-group-item\\\" *ngFor=\\\"let i of StudentList;let y=index\\\"  >{{i.name}}</li>\\n            </ul>\\n            <br/>\\n            <br/>\\n            <button class='button' (click)=\\\"viewForm()\\\">Add Student</button>\\n      \\n        </div>\\n        <div *ngIf='form'>\\n            \\n                <label for=\\\"name\\\">Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"name\\\"  required>\\n          \\n              <button (click)='send()'>Add!</button>\\n          \\n        </div>\\n  \\n    </div>\\n    \\n      \\n  </body>\\n</html>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { StudentService} from './student.service';\nimport { StudentInterface } from './studentconfig';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent implements OnInit {\n\n  StudentList:StudentInterface[]\n  batchList:Object[]\n  SearchbyIdname:string\n  particularStudent:StudentInterface\n  viewDropdown:Boolean\n  name:string\n  form:boolean\n  id:number\n  batchId:string\n\n  constructor(private student:StudentService) { \n    this.StudentList=[]\n\n  }\n\n  ngOnInit() \n  {\n    this.student.getData().subscribe((event:any)=>{\n      this.StudentList=event;\n      console.log(this.StudentList);\n    }) \n\n    this.student.getBatches().subscribe((event:any)=>{\n      this.batchList=event;\n      console.log(this.batchList);\n    }) \n\n  }\n\n  viewForm()\n  {\n    this.form=true\n  }\n\n  send()\n  {\n    \n    var newStudent:StudentInterface={\n    name:this.name,\n    \n    };\n    this.student.postData(newStudent).subscribe((event:any)=>{\n      this.StudentList=event\n      console.log(this.StudentList)\n    })\n  }\n\n  searchStudentById()\n  {\n    console.log('inside')\n    this.id=parseInt(this.SearchbyIdname)\n    this.student.getParticularStudent(this.id).subscribe((event:any)=>{\n      this.particularStudent=this.StudentList[this.id-1]     \n    })\n    this.viewDropdown=true\n    \n  }\n\n  EnrollBatch(){\n    var batch:object={\n      'batchId':parseInt(this.batchId)\n    }\n    this.student.AddInMappingTable(this.id,batch).subscribe((event=>{\n      \n      console.log('inserted')\n    }))\n\n  }\n\n  \n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { StudentInterface } from './studentconfig';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  BASE_URL='http://localhost:3090/api/students'\n  PARTICULAR_URL='http://localhost:3090/api/batches'\n  \n  //PARTICULAR_URL='http//localhost:3090/api/students'\n\n  constructor(private http: HttpClient) { }\n  getData()\n  {\n    return this.http.get<StudentInterface>(this.BASE_URL);\n  }\n\n  getParticularStudent(id:number)\n  {\n    return this.http.get<StudentInterface>(this.BASE_URL+'/'+id)\n  }\n\n  postData(value:object)\n  {\n    return this.http.post<StudentInterface>(this.BASE_URL,value);\n  }\n\n  getBatches()\n  {\n    return this.http.get(this. PARTICULAR_URL);\n  }\n\n  AddInMappingTable(studentid:number,batch:object)\n  {\n    return this.http.post(this.BASE_URL+'/'+studentid+'/batches',batch)\n  }\n  \n}\n","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n  <title>Subjects List</title>\\n</head>\\n<body>\\n    <div class=\\\"container\\\">\\n        <br>\\n        <br>\\n        <div *ngIf=\\\"!form\\\">\\n          \\n            <ul class=\\\"list-group\\\" >\\n                <li class=\\\"list-group-item active\\\">Subjects!</li>\\n                <li class=\\\"list-group-item\\\" *ngFor=\\\"let i of subjectList;let y=index\\\"  >{{i.name}}</li>\\n            </ul>\\n            <br/>\\n          <br/>\\n            <button class='button' (click)=\\\"viewForm()\\\">Add Subject</button>\\n      \\n        </div>\\n        <div *ngIf='form'>\\n            \\n                <label for=\\\"name\\\">Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"name\\\"  required>\\n                \\n          \\n              <select [(ngModel)]='courseId'>\\n                  <option *ngFor=\\\"let i of courseList;let y=index\\\" [ngValue]='i.id' #option>{{i.name}} </option>\\n              </select>\\n          \\n          <button (click)='send()'>Add!</button>\\n          \\n        </div>\\n  \\n    </div>\\n</body>\\n</html>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SubjectService} from './subject.service';\nimport { SubjectInterface } from './subjectconfig';\nimport { CourseService } from '../course/course.service';\nimport { CourseInterface } from '../course/courseconfig';\n\n@Component({\n  selector: 'app-subject',\n  templateUrl: './subject.component.html',\n  styleUrls: ['./subject.component.css']\n})\nexport class SubjectComponent implements OnInit {\n\n  subjectList:SubjectInterface[]\n  courseList:CourseInterface[]\n  form:boolean\n  name:string\n  courseId:number\n\n  constructor(private subject:SubjectService,private course:CourseService) { \n    this.subjectList=[]\n    this.courseList=[]\n  }\n\n  ngOnInit() \n  {\n    this.subject.getData().subscribe((event:any)=>{\n      this.subjectList=event;\n      console.log(this.subjectList);\n    })\n    this.course.getData().subscribe((event:any)=>{\n      this.courseList=event;\n      console.log(this.courseList);\n    })\n\n  \n  }\n\n  viewForm()\n  {\n    this.form=true\n  }\n\n  send()\n  {\n    \n    var newSubject:SubjectInterface={\n    name:this.name,\n    courseId:this.courseId\n    };\n    this.subject.postData(newSubject).subscribe((event:any)=>{\n      this.subjectList=event\n      console.log(this.subjectList)\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SubjectInterface } from './subjectconfig';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n\n  BASE_URL='http://localhost:3090/api/subjects'\n\n  constructor(private http: HttpClient) { }\n  getData()\n  {\n    return this.http.get<SubjectInterface>(this.BASE_URL);\n  }\n\n  postData(value:object)\n  {\n    return this.http.post<SubjectInterface>(this.BASE_URL,value);\n  }\n  \n}\n","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n  <div class=\\\"jumbotron jumbotron-fluid\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <h1 class=\\\"display-4\\\">Teacher's List</h1>\\n        <p class=\\\"lead\\\">Below our staff</p>\\n      </div>\\n    </div>\\n  <!-- <title>Teacher's List</title> -->\\n</head>\\n<body>\\n  <div class=\\\"container\\\">\\n    <br>\\n    <br>\\n      <div *ngIf=\\\"!form\\\">\\n          <ul class=\\\"list-group\\\" >\\n              <li class=\\\"list-group-item active\\\">Teachers!</li>\\n              <li class=\\\"list-group-item\\\" *ngFor=\\\"let i of teacherList;let y=index\\\"  >{{i.name}}</li>\\n          </ul>\\n          <br/>\\n          <br/>\\n          <button class='button' (click)=\\\"viewForm()\\\">Add Teacher</button>\\n    \\n      </div>\\n      <div *ngIf='form'>\\n          \\n              <label for=\\\"name\\\">Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"name\\\"  required>\\n              \\n              <div>\\n                  <label for=\\\"name\\\">Select</label>\\n                  <select [(ngModel)]='subjectId'>\\n                      <option *ngFor=\\\"let i of subjectList;let y=index\\\" [ngValue]='i.id' #option>{{i.name}} </option>\\n                  </select>\\n              </div>\\n\\n              <div>\\n                  <button (click)='send()'>Add!</button>\\n              </div>\\n      </div>\\n\\n  </div>\\n  \\n    \\n</body>\\n</html>\\n\\n\\n \"","import { Component, OnInit } from '@angular/core';\n//import { Component,OnInit } from '@angular/core';\nimport { TeacherService} from './teacher.service';\nimport { teacherInterface } from './teacherconfig';\n//import { SubjectInterface } from './subjectconfig';\nimport { SubjectService } from '../subject/subject.service';\nimport { SubjectInterface } from '../subject/subjectconfig';\n\n@Component({\n  selector: 'app-teacher',\n  templateUrl: './teacher.component.html',\n  styleUrls: ['./teacher.component.css']\n})\nexport class TeacherComponent implements OnInit {\n  teacherList:teacherInterface[]\n  form:boolean\n  subjectId:number\n  name:string\n\n  subjectList:SubjectInterface[]\n\n  constructor(private teacher:TeacherService,private subject:SubjectService) { \n    this.teacherList=[]\n    this.subjectList=[]\n  }\n\n  ngOnInit() \n  {\n    this.teacher.getData().subscribe((event:any)=>{\n      this.teacherList=event;\n      console.log(this.teacherList);\n    })\n\n\n    this.subject.getData().subscribe((event:any)=>{\n      this.subjectList=event;\n      console.log(this.subjectList);\n    })\n\n  }\n\n  viewForm()\n  {\n    this.form=true\n  }\n\n  send(){\n    console.log(this.name)\n    console.log(this.subjectId)\n    var newTeacher:teacherInterface={\n    name:this.name,\n    subjectId:this.subjectId\n    };\n    this.teacher.postData(newTeacher).subscribe((event:any)=>{\n      this.teacherList=event\n      console.log(this.teacherList)\n    })\n  }\n\n  \n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { teacherInterface } from './teacherconfig';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeacherService {\n\n  BASE_URL='http://localhost:3090/api/teachers'\n\n  constructor(private http: HttpClient) { }\n  getData()\n  {\n    return this.http.get<teacherInterface>(this.BASE_URL);\n  }\n\n  postData(value:teacherInterface)\n  {\n    return this.http.post<teacherInterface>(this.BASE_URL,value);\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}